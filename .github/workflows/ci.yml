name: Linting and Testing
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]  
  workflow_dispatch:

jobs:
  flake8_py39:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Setup Python
        uses: actions/setup-python@v4.2.0
        with:
          python-version: '3.9'
    
      - name: Setup flake8 annotations
        uses: rbialon/flake8-annotations@v1
        
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  
  bandit_py39:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Setup Python
        uses: actions/setup-python@v4.2.0
        with:
          python-version: '3.9'
        
      - name: python-bandit with code annotations
        uses: ioggstream/bandit-report-artifacts@v0.0.2
        
      - name: Security check - Bandit
        uses: ioggstream/bandit-report-artifacts@v0.0.2
        with:
          project_path: .
          ignore_failure: false
          
      - name: Security check report artifacts
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: Security report
          path: output/security_report.txt

  
  pytest_py39:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        
      - name: Setup Python
        uses: actions/setup-python@v4.2.0
        with:
          python-version: '3.9'
    
      - name: Pytest summary
        uses: dariocurr/pytest-summary@v1

